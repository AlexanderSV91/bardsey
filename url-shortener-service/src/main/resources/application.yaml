server:
  port: ${URL_SHORTENER_PORT:8081}
  compression:
    enabled: true
    mime-types: application/json,application/xml,text/html,text/plain
    min-response-size: 1024

spring:
  application:
    name: ${URL_SHORTENER_NAME:url-shortener-service}
  threads:
    virtual:
      enabled: true
#  main:
#    lazy-initialization: true
  profiles:
#    group:
#      dev-local:
#        - postgres
#        - local
#    active: standalone
    active: cloudconfig
  liquibase:
    enabled: true
    change-log: classpath:db/changelog/db.changelog-master.yaml
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${POSTGRES_DB:url-shortener}
    username: ${POSTGRES_USER:test}
    password: ${POSTGRES_PASSWORD:test}
    hikari:
      minimum-idle: 5
      maximum-pool-size: 20
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
      transaction-isolation: TRANSACTION_READ_COMMITTED
      auto-commit: false
      data-source-properties: #https://vladmihalcea.com/mysql-jdbc-statement-caching/
        useServerPrepStmts: false
        cachePrepStmts: false
        prepStmtCacheSize: 500
        prepStmtCacheSqlLimit: 1024
  sql:
    init:
      schema-locations: classpath*:db/postgres/schema.sql
      data-locations: classpath*:db/postgres/data.sql
      mode: never
  jpa:
    generate-ddl: false
    hibernate:
      ddl-auto: none
    show-sql: true
    open-in-view: false
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    properties:
      hibernate:
        format_sql: true
        default_batch_fetch_size: 15
        jdbc:
          time_zone: UTC
          batch_size: 15
          order_insert: true
          order_update: true
          connection:
            provider_disables_autocommit: true
          query:
            in_clause_parameter_padding: true
            fail_on_pagination_over_collection_fetch: true
            plan_cache_max_size: 4096
  docker:
    compose:
      enabled: false
  config:
    import: "optional:configserver:"
  cloud:
    config:
      enabled: false

eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE:http://localhost:8761/eureka/}
    enabled: true
    fetch-registry: true
    register-with-eureka: true
  instance:
    instance-id: ${spring.application.name}:${random.uuid}

management:
  tracing:
    sampling:
      probability: 1.0
  info:
    java:
      enabled: true
    env:
      enabled: true
  endpoints:
    web:
      exposure:
        include: "*"
#        include: sbom,health

logging:
  level:
    org.springframework: info
  structured:
    format:
      console:

feature:
  cache:
    enabled: ${CACHE_ENABLE:true}

---
spring:
  config:
    activate:
      on-profile: standalone

eureka:
  client:
    enabled: false

---
spring:
  config:
    activate:
      on-profile: cloudconfig
  cloud:
    config:
      enabled: true
      uri: ${CONFIG_SERVER_HOST:http://localhost}:${CONFIG_SERVER_PORT:8888}
      name: ${URL_SHORTENER_NAME:${spring.application.name}}
      profile: cloudconfig,git
